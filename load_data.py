#!/usr/bin/python

import numpy as np
import os


def load_data(path: str, load_mode=0):
    """
    Read the npy file in a directory and restore it to a numpy array,
    including the label return of the image data

    :param path: Directory where npy files are stored The file should be generated by easy-image,
    which means that the directory contains three files: "train.npy", "valid.npy", and "test.npy".

    :param load_mode: Specify which data to load:
        0: load train and validation data, return (train_data, train_labels, valid_data, valid_labels)
        1: load only train data, return (train_data, train_labels)
        2: load only test data, return (test_data, test_labels)
        -1: load all data, return (train_data, train_labels, valid_data, valid_labels,
                                  test_data, test_labels)

    :return: see load_mode
    """
    if load_mode not in list(range(3)):
        raise ValueError('load_mode should be 0, 1, 2 or 3.Found', str(load_mode))

    train_data, train_labels = None, None
    valid_data, valid_labels = None, None
    test_data, test_labels = None, None

    if load_mode < 2:
        train_data, train_labels = np.load(os.path.join(path, 'train.data.npy')),\
                                   np.load(os.path.join(path, 'train.labels.npy'))

    if load_mode <= 0:
        valid_data, valid_labels = np.load(os.path.join(path, 'valid.data.npy')), \
                                   np.load(os.path.join(path, 'valid.labels.npy'))

    if load_mode == 2 or load_mode == -1:
        test_data, test_labels = np.load(os.path.join(path, 'test.data.npy')), \
                                   np.load(os.path.join(path, 'test.labels.npy'))

    if load_mode == 0:
        return train_data, train_labels, valid_data, valid_labels
    elif load_mode == 1:
        return train_data, train_labels
    elif load_mode == 2:
        return test_data, test_labels
    else:
        return train_data, train_labels, valid_data, valid_labels,\
               test_data, test_labels
